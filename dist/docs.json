{
  "api": {
    "name": "OpeninstallPlugin",
    "slug": "openinstallplugin",
    "docs": "",
    "tags": [],
    "methods": [
      {
        "name": "configure",
        "signature": "(options: ConfigOptions) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "ConfigOptions"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "ConfigOptions"
        ],
        "slug": "configure"
      },
      {
        "name": "serialEnabled",
        "signature": "(options: { enabled: boolean; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ enabled: boolean; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "serialenabled"
      },
      {
        "name": "clipBoardEnabled",
        "signature": "(options: { enabled: boolean; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ enabled: boolean; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "clipboardenabled"
      },
      {
        "name": "init",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "init"
      },
      {
        "name": "getInstall",
        "signature": "() => Promise<any>",
        "parameters": [],
        "returns": "Promise<any>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "getinstall"
      },
      {
        "name": "getInstallCanRetry",
        "signature": "() => Promise<any>",
        "parameters": [],
        "returns": "Promise<any>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "getinstallcanretry"
      },
      {
        "name": "reportRegister",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "reportregister"
      },
      {
        "name": "reportEffectPoint",
        "signature": "(options: { pointId?: string; pointValue?: string; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ pointId?: string | undefined; pointValue?: string | undefined; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "reporteffectpoint"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'wakeUp', listenerFunc: WakeUpListener) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'wakeUp'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "WakeUpListener"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle",
          "WakeUpListener"
        ],
        "slug": "addlistenerwakeup"
      },
      {
        "name": "removeAllListeners",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "removealllisteners"
      }
    ],
    "properties": []
  },
  "interfaces": [
    {
      "name": "ConfigOptions",
      "slug": "configoptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "adEnabled",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "boolean"
        },
        {
          "name": "macDisabled",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "boolean"
        },
        {
          "name": "imeiDisabled",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "boolean"
        },
        {
          "name": "gaid",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "oaid",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        }
      ]
    },
    {
      "name": "PluginListenerHandle",
      "slug": "pluginlistenerhandle",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "remove",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "() => Promise<void>"
        }
      ]
    }
  ],
  "enums": [],
  "typeAliases": [
    {
      "name": "WakeUpListener",
      "slug": "wakeuplistener",
      "docs": "",
      "types": [
        {
          "text": "(status: any): void",
          "complexTypes": []
        }
      ]
    }
  ],
  "pluginConfigs": []
}